// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/courses": {
            "get": {
                "description": "Get all courses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Get all courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/course.Course"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Create a new course",
                "parameters": [
                    {
                        "description": "Course",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/course.Course"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/course.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "Get a course by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Get a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/course.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing course by ID",
                "tags": [
                    "course"
                ],
                "summary": "Delete an existing course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Update an existing course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/course.Course"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/course.Course"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            }
        },
        "/golfs": {
            "get": {
                "description": "Get all golfs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "golf"
                ],
                "summary": "Get all golfs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/golf.Golf"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new golf",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "golf"
                ],
                "summary": "Create a new golf",
                "parameters": [
                    {
                        "description": "Golf",
                        "name": "golf",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golf.Golf"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/golf.Golf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            }
        },
        "/golfs/{id}": {
            "get": {
                "description": "Get a golf by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "golf"
                ],
                "summary": "Get a golf by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Golf ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golf.Golf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing golf by ID",
                "tags": [
                    "golf"
                ],
                "summary": "Delete an existing golf",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Golf ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing golf by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "golf"
                ],
                "summary": "Update an existing golf",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Golf ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Golf",
                        "name": "golf",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golf.Golf"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/golf.Golf"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "course.Course": {
            "type": "object",
            "properties": {
                "compact": {
                    "type": "boolean"
                },
                "golf_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "num_holes": {
                    "type": "integer"
                },
                "pitch_and_putt": {
                    "type": "boolean"
                }
            }
        },
        "golf.Golf": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "googleMapLinks": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                }
            }
        },
        "utils.AppError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "ProjectPAR API",
	Description:      "This project is a comprehensive golf management system designed to facilitate the management of golf courses, including tracking of golf courses, holes, and tees.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
